@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager //use that to check if the user is logged in
@inject UserManager<IdentityUser> UserManager //use that to get the user id
@model BlogProject.Models.ViewModels.BlogDetailsViewModel
@{
    ViewData["Title"] = @Model.PageTitle;
}


<div class="container my-5">
  
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6" >
           @if(Model != null)
            {
                <h1 class="mb-3">@Model.Heading</h1>

                <div class="d-flex justify-content-between mb-3"> 
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                </div>

                <div class="mb-3 text-primary fw-bold text-center">
                    @if(SignInManager.IsSignedIn(User))
                    {
                        @if(Model.Liked)
                        {
                            <a style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
                            </a>
                        }
                        else
                        {
                            <a id="btnLike" style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up"> </i>
                            </a>
                        }

                        
                    }

                    @if (@Model.TotalLikes > 1)
                    {
                        <span id="totalLikes">@Model.TotalLikes</span> <span> Gostos</span>
                        
                    }
                    else
                    {
                        <span id="totalLikes">@Model.TotalLikes</span> <span> Gosto</span>
                        
                    }
                    
                </div>

                <div class="mb-3 d-flex">
                    @foreach (var tag in Model.Tags)
                    {
                        <span class="badge bg-secondary me-1">@tag.Name</span>
                    }
                </div>

                <img src="@Model.FeaturedImageUrl" class="mb-3 d-block img-fluid" />

                <div class="mb-3 blog-details-content">
                    @Html.Raw(@Model.Content)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Comentário</h5>
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <form method="post">

                                <div class="mb-3">
                                    <span class="badge bg-primary me-1">Comente com respeito.</span>
                                    <input class="form-control" type="text" asp-for="CommentDescription"/>
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">Postar</button>
                                    <input type="hidden" asp-for="Id" />
                                    <input type="hidden" asp-for="UrlHandle" />
                                </div>

                                <div class="card-body">
                                    @if (Model.Comments != null && Model.Comments.Any())
                                    {
                                        @foreach (var comment in Model.Comments)
                                        {
                                            <div class="card mb-3">
                                                <div class="card-body">
                                                    <div>
                                                        @comment.Description
                                                    </div>
                                                    <div
                                                        class="d-flex justify-content-between">
                                                        <span class="text-secondary">@comment.Username</span>
                                                        <span class="text-secondary">@comment.DateAdded.ToShortDateString()</span>
                                                    </div>

                                                </div>

                                            </div>

                                        }

                                       
                                    }

                                </div>

                            </form>
                        }
                    </div>
                </div>

                


               

            }
            else
            {
                <p class="text-center fw-bold">404 - Publicação não encontrada!</p>
            }
        </div>
    </div>
</div>

@section Scripts
{
    <script>

        const btnLikeElement = document.getElementById('btnLike');
        const totalLikesElement = document.getElementById('totalLikes');

        async function getTotalLikes()
        {
            fetch('/api/blogpostLike/@Model.Id/totalLikes',
                {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': '*/*'
                    }
                }).then(data => data.json())
                  .then(result => {
                    totalLikesElement.innerHTML = result;
                });
        }

        async function addLikeForBlog() 
        { 
            fetch('/api/BlogPostLike/Add',
                {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': '*/*'
                    },
                    body: JSON.stringify({
                        blogPostId: '@Model.Id', userId: '@UserManager.GetUserId(User)'
                    })

                }).then(() => {
                    btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"> </i>';
                    btnLikeElement.removeEventListener('click', addLikeForBlog);
                    getTotalLikes(); //update the total likes after the user clicks the like button
                });
        }

        btnLikeElement.addEventListener('click', addLikeForBlog);

    </script>
}